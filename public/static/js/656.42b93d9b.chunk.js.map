{"version":3,"file":"static/js/656.42b93d9b.chunk.js","mappings":"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","sources":["places/pages/NewPlaces.js","shared/components/FormElement/Button.js","shared/components/FormElement/ImageUpload.js","shared/components/FormElement/Input.js","shared/components/UiEement/ErrorModel.js","shared/components/UiEement/Modal.js","shared/hooks/Form-hook.js","shared/hooks/http-hook.js","shared/utils/Validators.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport ErrorModel from '../../shared/components/UiEement/ErrorModel';\r\nimport LoadingSpinner from '../../shared/components/UiEement/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/utils/Validators.js';\r\nimport { useForm } from '../../shared/hooks/Form-hook.js';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook.js';\r\nimport { AuthContext } from '../../shared/context/auth-context.js';\r\nimport ImageUpload from '../../shared/components/FormElement/ImageUpload.js'\r\nimport './PlaceForm.css';\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n  const history = useHistory();\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', formState.inputs.title.value);\r\n    formData.append('description', formState.inputs.description.value);\r\n    formData.append('address', formState.inputs.address.value)\r\n    // formData.append('creator',auth.userId);\r\n    formData.append('image', formState.inputs.image.value);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/new`,\r\n        'POST',\r\n        formData,\r\n        { Authorization: 'Bearer ' + auth.token }\r\n      );\r\n      history.push('/');\r\n    } catch (err) {\r\n      // console.log(err)\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModel error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload id='image' onInput={inputHandler} errorText=\"Please provide an image\" />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default NewPlace;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useRef,useState } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst ImageUpload = props => {\r\n  const filePickerRef = useRef();\r\nconst [file,setFile]=useState();\r\nconst [preViewUrl,setPreViewUrl]=useState();\r\nconst [isValid,setIsValid]=useState(false);\r\nuseEffect(()=>{\r\n    if(!file){\r\n        return;\r\n        }\r\n        const fileReader=new FileReader();\r\n        fileReader.onload=()=>{\r\n            setPreViewUrl(fileReader.result);\r\n            }\r\n\r\n        fileReader.readAsDataURL(file)\r\n},[file])\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid=isValid;\r\nif( event.target.files && event.target.files.length===1){\r\n     pickedFile = event.target.files[0];\r\n    setFile(pickedFile);\r\n    // setPreViewUrl(URL.createObjectURL(pickedFile));\r\n    setIsValid(true);\r\n    fileIsValid=true;\r\n    }else{\r\n        setIsValid(false);\r\n        }\r\n        props.onInput(props.id,pickedFile,fileIsValid);\r\n}\r\n \r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n{preViewUrl && <img src={preViewUrl} alt=\"Preview\" />}\r\n{!preViewUrl && <p>Please Pick an Image</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n      </div>\r\n      {!isValid && props.errorText}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import  { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../utils/Validators.js';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","\r\nimport Modal from './Modal';\r\nimport Button from '../FormElement/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef} from 'react';\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url,\r\n        {  method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl === httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n  //   };\r\n  // }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","React","children","_jsx","ErrorModel","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","href","size","inverse","danger","to","Link","exact","onClick","filePickerRef","useRef","file","setFile","useState","preViewUrl","setPreViewUrl","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}