{"version":3,"file":"static/js/220.c5c51664.chunk.js","mappings":"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","sources":["shared/components/FormElement/Button.js","shared/components/FormElement/ImageUpload.js","shared/components/FormElement/Input.js","shared/components/UiEement/Card.js","shared/components/UiEement/ErrorModel.js","shared/components/UiEement/Modal.js","shared/hooks/Form-hook.js","shared/hooks/http-hook.js","shared/utils/Validators.js","user/pages/Auth.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useRef,useState } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst ImageUpload = props => {\r\n  const filePickerRef = useRef();\r\nconst [file,setFile]=useState();\r\nconst [preViewUrl,setPreViewUrl]=useState();\r\nconst [isValid,setIsValid]=useState(false);\r\nuseEffect(()=>{\r\n    if(!file){\r\n        return;\r\n        }\r\n        const fileReader=new FileReader();\r\n        fileReader.onload=()=>{\r\n            setPreViewUrl(fileReader.result);\r\n            }\r\n\r\n        fileReader.readAsDataURL(file)\r\n},[file])\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid=isValid;\r\nif( event.target.files && event.target.files.length===1){\r\n     pickedFile = event.target.files[0];\r\n    setFile(pickedFile);\r\n    // setPreViewUrl(URL.createObjectURL(pickedFile));\r\n    setIsValid(true);\r\n    fileIsValid=true;\r\n    }else{\r\n        setIsValid(false);\r\n        }\r\n        props.onInput(props.id,pickedFile,fileIsValid);\r\n}\r\n \r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n{preViewUrl && <img src={preViewUrl} alt=\"Preview\" />}\r\n{!preViewUrl && <p>Please Pick an Image</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n      </div>\r\n      {!isValid && props.errorText}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import  { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../utils/Validators.js';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","\r\nimport './card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","\r\nimport Modal from './Modal';\r\nimport Button from '../FormElement/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef} from 'react';\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url,\r\n        {  method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl === httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n  //   };\r\n  // }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import { useState, useContext } from 'react';\r\n// import  {BACKEND_URI} from \"../../env.js\";\r\n// import 'dotenv/config'\r\nimport Card from '../../shared/components/UiEement/Card';\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport ImageUploader from '../../shared/components/FormElement/ImageUpload.js'\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from '../../shared/utils/Validators.js';\r\nimport { useForm } from '../../shared/hooks/Form-hook.js';\r\nimport { AuthContext } from '../../shared/context/auth-context.js';\r\nimport './Auth.css';\r\nimport ErrorModal from '../../shared/components/UiEement/ErrorModel.js';\r\nimport LoadingSpinner from '../../shared/components/UiEement/LoadingSpinner.js'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook.js';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\nconst {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          image:{\r\n            value:null,\r\n            isValid:false\r\n          }\r\n\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/login`, 'POST', JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n          password: formState.inputs.password.value\r\n        }),\r\n          {\r\n                'Content-Type': 'application/json'\r\n              });\r\n      //  console.log(responseData); \r\n    auth.login(responseData.userId,responseData.token);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {  \r\n      try {\r\n\r\n        const formData=new FormData();\r\n        formData.append('name',formState.inputs.name.value);\r\n        formData.append('email',formState.inputs.email.value);\r\n        formData.append('password',formState.inputs.password.value);\r\n        formData.append('image',formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, 'POST',\r\n         formData,\r\n        //  {\r\n        //     'Content-Type': 'application/json'\r\n        //   });\r\n        );\r\n        // console.log(responseData); \r\n    auth.login(responseData.userId,responseData.token);\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n     \r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n   <>\r\n   {isLoading && <LoadingSpinner overlay/>}\r\n   <ErrorModal error={error} onClear={clearError}/>\r\n    <Card className=\"authentication\">\r\n      <h2>Login Required</h2>\r\n      <hr />\r\n      <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n          <Input\r\n            element=\"input\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a name.\"\r\n            onInput={inputHandler}\r\n          />\r\n        )}\r\n        {!isLoginMode && <ImageUploader center id='image' onInput={inputHandler}\r\n        errorText=\"Please provide an image\"/>}\r\n        <Input\r\n          element=\"input\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          element=\"input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(6)]}\r\n          errorText=\"Please enter a valid password, at least 6 characters.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n        </Button>\r\n      </form>\r\n      <Button inverse onClick={switchModeHandler}>\r\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n      </Button>\r\n    </Card>\r\n   </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","href","_jsx","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","filePickerRef","useRef","file","setFile","useState","preViewUrl","setPreViewUrl","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","id","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","pickImageHandler","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","Modal","onCancel","onClear","header","show","error","footer","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","async","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","clearError","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","inputHandler","setFormData","email","password","_Fragment","LoadingSpinner","overlay","ErrorModal","Card","JSON","stringify","login","userId","token","console","log","formData","FormData","append","name","image","Input","ImageUploader","switchModeHandler","prevMode"],"sourceRoot":""}