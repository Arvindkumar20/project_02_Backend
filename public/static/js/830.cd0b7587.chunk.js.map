{"version":3,"file":"static/js/830.cd0b7587.chunk.js","mappings":"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","sources":["places/pages/UpdatePlace.js","shared/components/FormElement/Button.js","shared/components/FormElement/Input.js","shared/components/UiEement/Card.js","shared/components/UiEement/ErrorModel.js","shared/components/UiEement/Modal.js","shared/hooks/Form-hook.js","shared/hooks/http-hook.js","shared/utils/Validators.js"],"sourcesContent":["import  { useEffect, useState,useContext } from 'react';\r\nimport { useParams,useHistory } from 'react-router-dom';\r\n// import 'dotenv/config';\r\nimport Input from '../../shared/components/FormElement/Input';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport Card from '../../shared/components/UiEement/Card';\r\nimport LoadingSpinner from '../../shared/components/UiEement/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/utils/Validators.js';\r\nimport { AuthContext } from '../../shared/context/auth-context.js';\r\nimport { useForm } from '../../shared/hooks/Form-hook.js';\r\nimport './PlaceForm.css';\r\nimport {useHttpClient} from '../../shared/hooks/http-hook.js';\r\nimport ErrorModel from \"../../shared/components/UiEement/ErrorModel.js\"\r\nconst UpdatePlace = () => {\r\n  const  auth=useContext(AuthContext);\r\n  const histiry=useHistory();\r\n  const placeId = useParams().placeId;\r\n  const [loadedPlace,setLoadedPlace]=useState();\r\nconst {sendRequest,error,clearError,isLoading}=useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\nuseEffect(()=>{\r\n  const fetchPlace = async () => {\r\n  try {\r\n   const reseponseData=await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n   setLoadedPlace(reseponseData.place)\r\n   setFormData(\r\n    {\r\n      title: {\r\n        value: reseponseData.place.title,\r\n        isValid: true\r\n      },\r\n      description: {\r\n        value:reseponseData.place.description,\r\n        isValid: true\r\n      }\r\n    },\r\n    true\r\n  );\r\n    \r\n  } catch (error) {\r\n   console.log(error) \r\n  }\r\n}\r\nfetchPlace();\r\n},[sendRequest,placeId,setFormData]);\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\ntry {\r\n await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,'PATCH',JSON.stringify({\r\n    title:formState.inputs.title.value,\r\n    description:formState.inputs.description.value\r\n  }),\r\n  {\r\n    'Content-Type':'application/json',\r\n    Authorization:'Bearer ' + auth.token\r\n  });\r\nhistiry.push('/'+auth.userId+'/places');\r\n} catch (error) {\r\n  console.log(error);\r\n}};\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner asOverlay/>\r\n      </div>\r\n    );\r\n  }\r\n  if (!loadedPlace&&!error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  return (\r\n  <>\r\n  <ErrorModel error={error} onClear={clearError}/>\r\n   {!isLoading && loadedPlace && <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n        initialValue={loadedPlace.title}\r\n        initialValid={true}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (min. 5 characters).\"\r\n        onInput={inputHandler}\r\n        initialValue={loadedPlace.description}\r\n        initialValid={true}\r\n      />\r\n      <Button type=\"submit\" disabled={!formState.isValid}>\r\n        UPDATE PLACE\r\n      </Button>\r\n    </form>}\r\n  </>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import  { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../utils/Validators.js';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","\r\nimport './card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","\r\nimport Modal from './Modal';\r\nimport Button from '../FormElement/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef} from 'react';\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url,\r\n        {  method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl === httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n  //   };\r\n  // }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["UpdatePlace","auth","useContext","AuthContext","histiry","useHistory","placeId","useParams","loadedPlace","setLoadedPlace","useState","sendRequest","error","clearError","isLoading","useHttpClient","formState","inputHandler","setFormData","useForm","title","value","isValid","description","useEffect","async","reseponseData","place","console","log","fetchPlace","_jsx","className","children","LoadingSpinner","asOverlay","_jsxs","_Fragment","ErrorModel","onClear","onSubmit","event","preventDefault","JSON","stringify","inputs","Authorization","token","push","userId","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initialValue","initialValid","VALIDATOR_MINLENGTH","Button","disabled","Card","props","href","size","inverse","danger","to","Link","exact","onClick","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","changeHandler","target","touchHandler","placeholder","onChange","onBlur","rows","htmlFor","style","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","React","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","useRef","url","method","arguments","length","undefined","body","headers","httpAbortCtrl","AbortController","current","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}