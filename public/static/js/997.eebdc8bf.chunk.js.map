{"version":3,"file":"static/js/997.eebdc8bf.chunk.js","mappings":"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","sources":["shared/components/UiEement/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/FormElement/Button.js","shared/components/UiEement/Card.js","shared/components/UiEement/ErrorModel.js","shared/components/UiEement/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from 'react';\r\n// import 'dotenv/config';\r\nimport Card from '../../shared/components/UiEement/Card';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport Modal from '../../shared/components/UiEement/Modal';\r\nimport Map from '../../shared/components/UiEement/Map';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModel from '../../shared/components/UiEement/ErrorModel.js';\r\nimport LoadingSpinner from '../../shared/components/UiEement/LoadingSpinner.js';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook.js';\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`, 'DELETE',\r\n        null,\r\n        {Authorization:'Bearer ' + auth.token}\r\n\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModel error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          {`can't`} be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId ===props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId ===props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import Card from '../../shared/components/UiEement/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElement/Button';\r\nimport './PlaceList.css';\r\nconst PlaceList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map(place => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default PlaceList;","// import { useParams } from 'react-router-dom'\r\nimport PlaceList from '../components/PlaceList';\r\nimport {useHttpClient} from \"../../shared/hooks/http-hook.js\";\r\nimport ErrorModel from \"../../shared/components/UiEement/ErrorModel.js\";\r\nimport LoadingSpinner from \"../../shared/components/UiEement/LoadingSpinner.js\";\r\nimport { useEffect, useState ,useContext} from 'react';\r\nimport { AuthContext } from '../../shared/context/auth-context.js';\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces,setLoadedPlaces]=useState();\r\n  const {isLoading,error,clearError,sendRequest}=useHttpClient();\r\n  const auth=useContext(AuthContext);\r\n  const uid = auth.userId;\r\n\r\n  useEffect(()=>{\r\n    const fetchPlaces = async () => {\r\n      try {\r\nconst responseData =await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${uid}`)\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (error) {\r\n        // console.log(error)\r\n      }\r\n    }\r\n    fetchPlaces();\r\n  },[sendRequest,uid]);\r\n  const placeDeleteHandler=(deletedPlace)=>{\r\nsetLoadedPlaces(prevPlaces=>prevPlaces.filter(place=>place.id!==deletedPlace))\r\n  }\r\n  return <>\r\n<ErrorModel error={error} onClear={clearError}/>\r\n  {isLoading && <div className='center'>\r\n    <LoadingSpinner asOverlay />\r\n  </div>\r\n  }\r\n\r\n {!isLoading && loadedPlaces &&  <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler}/>}\r\n  </>;\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","\r\nimport './card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","\r\nimport Modal from './Modal';\r\nimport Button from '../FormElement/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef} from 'react';\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n      try {\r\n        const response = await fetch(url,\r\n        {  method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl === httpAbortCtrl\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n  //   };\r\n  // }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","style","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","React","children","ErrorModel","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","async","id","Authorization","token","onDelete","console","log","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","uid","responseData","places","fetchPlaces","_Fragment","PlaceList","deletedPlace","prevPlaces","filter","href","size","Link","exact","type","disabled","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","json","reqCtrl","ok","Error","message","err"],"sourceRoot":""}